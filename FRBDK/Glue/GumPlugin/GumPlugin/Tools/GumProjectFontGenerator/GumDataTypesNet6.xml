<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GumDataTypesNet6</name>
    </assembly>
    <members>
        <member name="P:Gum.DataTypes.Behaviors.ElementBehaviorReference.ProjectName">
            <summary>
            Currently unused - this will eventually be used to reference behaviors
            from different Gum projects.
            </summary>
        </member>
        <member name="M:Gum.DataTypes.DimensionUnitTypeExtensions.GetIsPixelBased(Gum.DataTypes.DimensionUnitType)">
            <summary>
            Returns whether one unit represents one pixel. 
            </summary>
            <param name="unitType">The unit type.</param>
            <returns>Whether one unit represents one pixel.</returns>
        </member>
        <member name="P:Gum.DataTypes.ElementReference.Link">
            <summary>
            The location of the file relative to the project if it differs from the Name. By default
            this will be empty, so the Name will be used to load/save the element. However, if this is not null,
            then this value is used instead to load the referenced element.
            </summary>
        </member>
        <member name="P:Gum.DataTypes.ElementSave.AllStates">
            <summary>
            Returns all states in the element including categorized states. For uncategorized states, see
            the States property.
            </summary>
        </member>
        <member name="M:Gum.DataTypes.ElementSave.GetInstance(System.String)">
            <summary>
            Returns the instance by name owned by this element.
            </summary>
            <remarks>
            This only searches the top-level for instances, but inheritance will result in DefinedByBase being set to true, so
            a true recursive search isn't needed.
            </remarks>
            <param name="name">The case-sensitive name of the instance.</param>
            <returns>The found instance, or null if no matches are found.</returns>
        </member>
        <member name="P:Gum.DataTypes.GumLoadResult.ErrorMessage">
            <summary>
            Error message about why the load may have failed. This does not include errors about missing files - for missing files see the MissingFiles list.
            </summary>
            <remarks>
            Errors include situations like a malformed XML file - errors which tools like Gum cannot recover from. Missing files, while resulting
            in an incomplete load, do not put the project in an unusable state, so we do not consider them errors.
            </remarks>
        </member>
        <member name="T:Gum.DataTypes.GumProjectSave">
            <summary>
            Represents the data stored in a .gumx file. GumProjectSave
            instances can be XML Serialized to a .gumx file.
            </summary>
        </member>
        <member name="P:Gum.DataTypes.GumProjectSave.ParentProjectRoot">
            <summary>
            The folder of the root of the parent project if this Gum project is part of a larger project (like a game project or android app).
            This is a relative path like "../../"
            </summary>
        </member>
        <member name="M:Gum.DataTypes.Variables.StateSave.GetValue(System.String)">
            <summary>
            Attempts to get the value for the argument variableName, or null if not found.
            </summary>
            <param name="variableName">The qualified variable name</param>
            <returns>The value found, or null</returns>
        </member>
        <member name="P:Gum.DataTypes.Variables.VariableListSave.Type">
            <summary>
             The type of each individual item in the list
            </summary>
        </member>
        <member name="T:Gum.DataTypes.Variables.VariableSaveValues">
            <summary>
            Struct representation of VariableSave which can be used in situations where
            heap allocation should not occur
            </summary>
        </member>
        <member name="P:Gum.DataTypes.Variables.VariableSave.SourceObject">
            <summary>
            The name of the object that this variable references. For example if the variable is "MyButton.Text", then the SourceObject is "MyButton"
            </summary>
        </member>
        <member name="P:Gum.DataTypes.Variables.VariableSave.ExposedAsName">
            <summary>
            If a Component contains an instance then the variable
            of that instance is only editable inside that component.
            The user must explicitly expose that variable.  If the variable
            is exposed then this variable is set.
            </summary>
        </member>
        <member name="P:Gum.DataTypes.Variables.VariableSave.SetsValue">
            <summary>
            Determines whether a null value should be set, or whether the variable is
            an ignored value.  If this value is true, then null values will be set on the underlying data.
            </summary>
        </member>
    </members>
</doc>
